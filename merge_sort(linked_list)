class Node:
    def __init__(self, val=0):
        self.val = val
        self.next = None

class Solution:
    def __init__(self):
        self.head = None

    def sortList(self, head: Optional[Node]) -> Optional[Node]:
        def merge(first, second):
            dummy = Node(0)
            current = dummy

            while first and second:
                if first.val < second.val:
                    current.next = first
                    current = current.next
                    first = first.next
                else:
                    current.next = second
                    current = current.next
                    second = second.next

            current.next = first or second
            return dummy.next

        def split(head):
            if not head or not head.next:
                return head

            slow = head
            fast = head

            while fast.next and fast.next.next:
                slow = slow.next
                fast = fast.next.next

            first = head
            second = slow.next
            slow.next = None

            first, second = split(first), split(second)

            return merge(first, second)

        self.head = head
        self.head = split(self.head)
        return self.head
