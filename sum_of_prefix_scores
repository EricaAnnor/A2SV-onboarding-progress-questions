class TrieNode:
    def __init__(self):
        self.children = [None for _ in range(26)]
        self.is_end = False
        self.count = 0
    
class Trie:
    def __init__(self):
        self.root = TrieNode()
    
    def insert(self,word):
        cur  = self.root
        for x in word:
            idx = ord(x) - ord('a')

            if cur.children[idx] == None:
                cur.children[idx] = TrieNode()
                cur.children[idx]
            cur.children[idx].count += 1
            cur = cur.children[idx]
        cur.is_end = True

class Solution:
    def sumPrefixScores(self, words: List[str]) -> List[int]:
        trie = Trie()

        for word in words:
            trie.insert(word)
        
        ans = []
        cur = trie.root
        for word in words:
            count = 0
            cur = trie.root
            for x in word:
                idx = ord(x) - ord('a')
                if cur.children[idx]:
                    count += cur.children[idx].count
                    cur = cur.children[idx]
              

            ans.append(count)
        return ans

        
