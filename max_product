class Solution:
    def maxProduct(self, nums: List[str]) -> int:
        alp = {'a':0,'b':1,'c':2,'d':3,'e':4,'f':5,'g':6,'h':7,'i':8,'j':9,'k':10,'l':11,'m':12,'n':13,'o':14,'p':15,'q':16,'r':17,'s':18,'t':19,'u':20,'v':21,'w':22,'x':23,'y':24,'z':25}
        binary = [['0']*26 for x in range(len(nums))]
        bit = []
        for x in range(len(nums)):
            for letter in nums[x]:
                binary[x][alp[letter]] = '1'
            bit.append(int(str(''.join(binary[x])),2))
        
        max_len = 0

        for x in range(len(bit)):
            for y in range(x+1,len(bit)):
                if (bit[x] & bit[y]) == 0:
                    max_len = max(max_len,(len(nums[x]) * len(nums[y])))

        return max_len
