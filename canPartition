class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        hashmap = defaultdict(int)
        
        def dp(i, target_sum):
            if i >= len(nums) or target_sum < 0:
                return False
            if target_sum == 0:
                return True
            state = (i, target_sum)
            if state not in hashmap:
                hashmap[state] = dp(i + 1, target_sum - nums[i]) or dp(i + 1, target_sum)
                
            return hashmap[state]
        
        total_sum = sum(nums)
        if total_sum % 2 != 0:
            return False
        
        target = total_sum // 2
        return dp(0, target)
