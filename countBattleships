class Solution:
    def countBattleships(self, board: List[List[str]]) -> int:
        directions = [(0,1),(1,0),(-1,0),(0,-1)]

        def inbound(r,c):
            return 0 <= r < len(board) and 0 <= c < len(board[0])

        
        def dfs(r,c):
            if (r,c) in visited or board[r][c] == ".":
                return 

            if inbound(r,c) and (r,c) not in visited:
                visited.add((r,c))

            
            for a,b in directions:
                n_r = r + a
                n_c = c + b

                if inbound(n_r,n_c) and (n_r,n_c) not in visited and board[n_r][n_c] != '.':
                    dfs(n_r,n_c)

            
        count = 0
        visited = set()


        for x in range(len(board)):
            for y in range(len(board[0])):
                if board[x][y] == 'X' and (x,y) not in visited:
                    dfs(x,y)
                    count += 1
        return count
