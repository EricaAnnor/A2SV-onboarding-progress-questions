class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        
        n_x = ''
        n_y = ''
        while x > 0:
            if x & 1 == 1:
                n_x += '1'
            else:
                n_x += '0'
            x >>= 1
        
        nx = n_x[::-1]

        while y > 0:
            if y & 1 == 1:
                n_y += '1'
            else:
                n_y += '0'
            y >>= 1
        
        ny = n_y[::-1]

        maxi = max(len(n_x),len(n_y))
        
        f = nx.zfill(maxi)
        l = ny.zfill(maxi)
        print(f,l)
        cnt = 0
        for x in range(len(f)):
            if f[x] != l[x]:
                cnt += 1

        return cnt
